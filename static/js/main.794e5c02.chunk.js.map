{"version":3,"sources":["components/SearchBar.js","apis/youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","params","part","maxResults","key","VideoItem","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","renderedList","map","id","videoId","VideoDetail","videoSrc","description","App","selectedVideo","onTermSubmit","a","youtube","get","q","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"yNAwCeA,E,4MApCbC,MAAQ,CAACC,KAAM,I,EAEfC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAACH,KAAME,EAAME,OAAOC,S,EAIpCC,aAAe,SAAAJ,GACbA,EAAMK,iBAEN,EAAKC,MAAMF,aAAa,EAAKP,MAAMC,O,4CAKrC,WACE,OACE,qBAAKS,UAAU,wBAAf,SACE,sBAAOC,SAAUC,KAAKL,aAAcG,UAAU,UAA9C,SACE,sBAAKA,UAAU,QAAf,UACE,iDACA,uBACEG,KAAK,OACLP,MAAOM,KAAKZ,MAAMC,KAClBa,SAAUF,KAAKV,2B,GAzBLa,IAAMC,W,QCEfC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,wCACTC,OAAQ,CACNC,KAAM,UACNR,KAAM,QACNS,WAAY,EACZC,IARQ,6CCWGC,G,MAXG,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,cACzB,OACE,sBAAKC,QAAS,kBAAMD,EAAcD,IAAQf,UAAU,kBAApD,UACE,qBAAKkB,IAAKH,EAAMI,QAAQC,MAAOpB,UAAU,WAAWqB,IAAKN,EAAMI,QAAQG,WAAWC,OAAOC,MACzF,qBAAKxB,UAAU,UAAf,SACE,qBAAKA,UAAU,SAAf,SAA0Be,EAAMI,QAAQC,eCQjCK,EAZG,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,OAAQV,EAAmB,EAAnBA,cACpBW,EAAeD,EAAOE,KAAI,SAACb,GAE/B,OAAO,cAAC,EAAD,CAAkCC,cAAeA,EAAeD,MAAOA,GAAvDA,EAAMc,GAAGC,YAIlC,OAAO,qBAAK9B,UAAU,0BAAf,SAA0C2B,KCWpCI,EApBK,SAAC,GAAa,IAAZhB,EAAW,EAAXA,MACpB,IAAKA,EACH,OAAO,6CAGT,IAAMiB,EAAQ,wCAAoCjB,EAAMc,GAAGC,SAE3D,OACE,gCACE,qBAAK9B,UAAU,WAAf,SACE,wBAAQoB,MAAM,eAAeC,IAAKW,MAEpC,sBAAKhC,UAAU,aAAf,UACE,oBAAIA,UAAU,YAAd,SAA2Be,EAAMI,QAAQC,QACzC,4BAAIL,EAAMI,QAAQc,qBCoDXC,E,4MA7Db5C,MAAQ,CAACoC,OAAQ,GAAIS,cAAe,M,EAUpCC,a,uCAAe,WAAO7C,GAAP,eAAA8C,EAAA,sEAEUC,EAAQC,IAAI,UAAW,CAC5C7B,OAAQ,CACN8B,EAAGjD,KAJM,OAEPkD,EAFO,OAQf,EAAK/C,SAAS,CAACgC,OAAQe,EAASC,KAAKC,MACnCR,cAAeM,EAASC,KAAKC,MAAM,KATtB,2C,wDAgBjB3B,cAAgB,SAACD,GACf,EAAKrB,SAAS,CAACyC,cAAepB,K,uDAxBhC,WACEb,KAAKkC,aAAa,e,oBA8BpB,WACE,OAEA,sBAAKpC,UAAU,eAAf,UACE,cAAC,EAAD,CAAWH,aAAcK,KAAKkC,eAC5B,qBAAKpC,UAAU,UAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,qBAAf,SACI,cAAC,EAAD,CAAae,MAAOb,KAAKZ,MAAM6C,kBAEnC,qBAAKnC,UAAU,gBAAf,SACE,cAAC,EAAD,CACAgB,cAAed,KAAKc,cACpBU,OAAQxB,KAAKZ,MAAMoC,uB,GAhDbrB,IAAMC,WCFxBsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.794e5c02.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n  state = {term: ''};\r\n\r\n  onInputChange = (event) => { //event callback function defined as arrow function\r\n    this.setState({term: event.target.value});\r\n\r\n  };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n    //TODO call callback from parent component\r\n    this.props.onFormSubmit(this.state.term);\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-bar ui segment\">\r\n        <form  onSubmit={this.onFormSubmit} className=\"ui form\">\r\n          <div className=\"field\">\r\n            <label>Video Search</label>\r\n            <input\r\n              type='text'\r\n              value={this.state.term}\r\n              onChange={this.onInputChange}\r\n              //onChange={e => this.setState({term: event.target.value})} //backup way of doing the above function\r\n              />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default SearchBar;\r\n","//npm install --save axios\r\nimport axios from 'axios';\r\n\r\nconst KEY = 'AIzaSyAkzZFP9-qu77IOg0oOADvqKalb1fbX0H8';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://www.googleapis.com/youtube/v3',\r\n  params: {\r\n    part: 'snippet',\r\n    type: 'video',\r\n    maxResults: 5,\r\n    key: KEY\r\n\r\n  }\r\n});\r\n","import './VideoItem.css';\r\nimport React from 'react';\r\n\r\nconst VideoItem = ({video, onVideoSelect}) => {\r\n  return (\r\n    <div onClick={() => onVideoSelect(video)} className=\"video-item item\">\r\n      <img alt={video.snippet.title} className=\"ui image\" src={video.snippet.thumbnails.medium.url} />\r\n      <div className=\"content\">\r\n        <div className=\"header\" >{video.snippet.title}</div>\r\n    </div>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default VideoItem;\r\n","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\n//deconstruct the props passed down so you can reference them directly\r\nconst VideoList = ({videos, onVideoSelect}) => {\r\n  const renderedList = videos.map((video) => {\r\n    //passes the onVideoSelect function down from app\r\n    return <VideoItem key={video.id.videoId} onVideoSelect={onVideoSelect} video={video} />;\r\n\r\n  });\r\n  // props.videos array of vids\r\n  return <div className=\"ui relaxed divided list\">{renderedList}</div>\r\n\r\n\r\n};\r\n\r\nexport default VideoList;\r\n","import React from 'react';\r\n\r\nconst VideoDetail = ({video}) => {\r\n  if (!video) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"ui embed\">\r\n        <iframe title=\"video player\" src={videoSrc} />\r\n      </div>\r\n      <div className=\"ui segment\">\r\n        <h4 className=\"ui header\">{video.snippet.title}</h4>\r\n        <p>{video.snippet.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetail;\r\n","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport youtube from '../apis/youtube.js'\r\nimport VideoList from \"./VideoList\";\r\nimport VideoDetail from \"./VideoDetail\";\r\n\r\nclass App extends React.Component {\r\n  state = {videos: [], selectedVideo: null }; //dont make null, make an empty type\r\n\r\n\r\ncomponentDidMount() {\r\n  this.onTermSubmit('USAF C-17')\r\n\r\n}\r\n\r\n\r\n  // ##### handles the search text to call the api and return results\r\n  onTermSubmit = async (term) => {\r\n    //console.log(term);\r\n    const response = await youtube.get('/search', {\r\n      params: {\r\n        q: term\r\n     }\r\n  });\r\n  //console.log(response.data.items);\r\n  this.setState({videos: response.data.items,\r\n    selectedVideo: response.data.items[0]\r\n\r\n   });\r\n};\r\n\r\n\r\n//##### handles the click select of a video\r\nonVideoSelect = (video) => {\r\n  this.setState({selectedVideo: video});\r\n  //console.log('From the App!', video);\r\n};\r\n\r\n\r\n\r\n\r\nrender() {\r\n  return (\r\n\r\n  <div className=\"ui container\">\r\n    <SearchBar onFormSubmit={this.onTermSubmit}  />\r\n      <div className=\"ui grid\">\r\n        <div className=\"ui row\">\r\n          <div className=\"eleven wide column\">\r\n              <VideoDetail video={this.state.selectedVideo} />\r\n          </div>\r\n          <div className='5 wide column'>\r\n            <VideoList\r\n            onVideoSelect={this.onVideoSelect}\r\n            videos={this.state.videos}\r\n            />\r\n          </div>\r\n      </div>\r\n    </div>\r\n    {/*passes functions down as props, the name and function dont have to be the same but done as convention\r\n    I have {this.state.videos.length} videos.*/}\r\n  </div>\r\n\r\n);\r\n}\r\n\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}